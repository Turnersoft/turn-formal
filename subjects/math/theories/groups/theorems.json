[
  {
    "id": "inverse_uniqueness",
    "content": {
      "Theorem": {
        "name": "inverse uniqueness",
        "description": "inverse uniqueness",
        "goal": {
          "id": "inverse_uniqueness:initial_state",
          "content": {
            "ProofGoal": {
              "statement": {
                "id": "inverse_uniqueness:initial_state",
                "content": {
                  "Text": "→"
                }
              },
              "quantifiers": [],
              "variables": []
            }
          }
        },
        "proofs": [
          {
            "id": "inverse_uniqueness:step_34f923f6-5c25-4119-855e-105b837ae1d9",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "inverse_uniqueness:step_34f923f6-5c25-4119-855e-105b837ae1d9",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "inverse_uniqueness:step_34f923f6-5c25-4119-855e-105b837ae1d9:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_29731ee6-a7b4-495f-9169-a72e2c22ff7c\", 0), value: Var(E(50)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "inverse_uniqueness:step_75780b99-d1b8-4f32-ba86-af334bdcf9cb",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "inverse_uniqueness:step_75780b99-d1b8-4f32-ba86-af334bdcf9cb",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "inverse_uniqueness:step_75780b99-d1b8-4f32-ba86-af334bdcf9cb:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_29731ee6-a7b4-495f-9169-a72e2c22ff7c\", 0), value: Var(E(50)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "inverse_uniqueness:step_a8d122f7-935f-4668-8be9-1f6f068f7134",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "inverse_uniqueness:step_a8d122f7-935f-4668-8be9-1f6f068f7134",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "inverse_uniqueness:step_a8d122f7-935f-4668-8be9-1f6f068f7134:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_29731ee6-a7b4-495f-9169-a72e2c22ff7c\", 0), value: Var(E(50)) }"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    }
  },
  {
    "id": "identity_uniqueness",
    "content": {
      "Theorem": {
        "name": "Identity Element Uniqueness",
        "description": "Proof that the identity element in a group is unique",
        "goal": {
          "id": "identity_uniqueness:initial_state",
          "content": {
            "ProofGoal": {
              "statement": {
                "id": "identity_uniqueness:initial_state",
                "content": {
                  "Text": "→"
                }
              },
              "quantifiers": [],
              "variables": []
            }
          }
        },
        "proofs": [
          {
            "id": "identity_uniqueness:step_2b312398-ad1b-43a1-83b1-e225960c4f2a",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "identity_uniqueness:step_2b312398-ad1b-43a1-83b1-e225960c4f2a",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "identity_uniqueness:step_2b312398-ad1b-43a1-83b1-e225960c4f2a:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_0e90fe7c-3823-47c1-8105-1d3a5e3e1fdb\", 0), value: Var(O(1)) }"
                    }
                  },
                  {
                    "id": "identity_uniqueness:step_2b312398-ad1b-43a1-83b1-e225960c4f2a:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_b8f05a24-5926-4e6f-97a8-e86e92f8f989\", 0), value: Var(O(2)) }"
                    }
                  },
                  {
                    "id": "identity_uniqueness:step_2b312398-ad1b-43a1-83b1-e225960c4f2a:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c53ffcf6-df97-42a9-b58f-d85bd4b4fb02\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" } })), Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" } })), right: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" })) }) }"
                    }
                  },
                  {
                    "id": "identity_uniqueness:step_2b312398-ad1b-43a1-83b1-e225960c4f2a:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_f1163fe5-4ce3-4b66-ae59-362560c85afb\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" } })), Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" } })), right: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" })) }) }"
                    }
                  },
                  {
                    "id": "identity_uniqueness:step_2b312398-ad1b-43a1-83b1-e225960c4f2a:variable_4",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_79f63e23-ae0e-4f17-970b-139fbe84d443\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" })), Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" }))], metadata: {}, description: None }, left: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" })), right: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" })) }) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "identity_uniqueness:step_79f63e23-ae0e-4f17-970b-139fbe84d443",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "identity_uniqueness:step_79f63e23-ae0e-4f17-970b-139fbe84d443",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "identity_uniqueness:step_79f63e23-ae0e-4f17-970b-139fbe84d443:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_0e90fe7c-3823-47c1-8105-1d3a5e3e1fdb\", 0), value: Var(O(1)) }"
                    }
                  },
                  {
                    "id": "identity_uniqueness:step_79f63e23-ae0e-4f17-970b-139fbe84d443:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_b8f05a24-5926-4e6f-97a8-e86e92f8f989\", 0), value: Var(O(2)) }"
                    }
                  },
                  {
                    "id": "identity_uniqueness:step_79f63e23-ae0e-4f17-970b-139fbe84d443:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c53ffcf6-df97-42a9-b58f-d85bd4b4fb02\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" } })), Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" } })), right: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" })) }) }"
                    }
                  },
                  {
                    "id": "identity_uniqueness:step_79f63e23-ae0e-4f17-970b-139fbe84d443:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_f1163fe5-4ce3-4b66-ae59-362560c85afb\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" } })), Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" } })), right: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" })) }) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "identity_uniqueness:step_b8f05a24-5926-4e6f-97a8-e86e92f8f989",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "identity_uniqueness:step_b8f05a24-5926-4e6f-97a8-e86e92f8f989",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "identity_uniqueness:step_b8f05a24-5926-4e6f-97a8-e86e92f8f989:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_0e90fe7c-3823-47c1-8105-1d3a5e3e1fdb\", 0), value: Var(O(1)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "identity_uniqueness:step_c53ffcf6-df97-42a9-b58f-d85bd4b4fb02",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "identity_uniqueness:step_c53ffcf6-df97-42a9-b58f-d85bd4b4fb02",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "identity_uniqueness:step_c53ffcf6-df97-42a9-b58f-d85bd4b4fb02:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_0e90fe7c-3823-47c1-8105-1d3a5e3e1fdb\", 0), value: Var(O(1)) }"
                    }
                  },
                  {
                    "id": "identity_uniqueness:step_c53ffcf6-df97-42a9-b58f-d85bd4b4fb02:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_b8f05a24-5926-4e6f-97a8-e86e92f8f989\", 0), value: Var(O(2)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "identity_uniqueness:step_f1163fe5-4ce3-4b66-ae59-362560c85afb",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "identity_uniqueness:step_f1163fe5-4ce3-4b66-ae59-362560c85afb",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "identity_uniqueness:step_f1163fe5-4ce3-4b66-ae59-362560c85afb:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_0e90fe7c-3823-47c1-8105-1d3a5e3e1fdb\", 0), value: Var(O(1)) }"
                    }
                  },
                  {
                    "id": "identity_uniqueness:step_f1163fe5-4ce3-4b66-ae59-362560c85afb:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_b8f05a24-5926-4e6f-97a8-e86e92f8f989\", 0), value: Var(O(2)) }"
                    }
                  },
                  {
                    "id": "identity_uniqueness:step_f1163fe5-4ce3-4b66-ae59-362560c85afb:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c53ffcf6-df97-42a9-b58f-d85bd4b4fb02\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" } })), Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" } })), right: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" })) }) }"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    }
  },
  {
    "id": "inverse_product_rule",
    "content": {
      "Theorem": {
        "name": "Group Inverse Product Rule",
        "description": "Proof that in a group, (ab)⁻¹ = b⁻¹a⁻¹",
        "goal": {
          "id": "inverse_product_rule:initial_state",
          "content": {
            "ProofGoal": {
              "statement": {
                "id": "inverse_product_rule:initial_state",
                "content": {
                  "Relationship": {
                    "lhs": {
                      "id": "inverse_product_rule:initial_state_left",
                      "content": {
                        "Text": "Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                      }
                    },
                    "rhs": {
                      "id": "inverse_product_rule:initial_state_right",
                      "content": {
                        "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })"
                      }
                    },
                    "operator": "Equal"
                  }
                }
              },
              "quantifiers": [],
              "variables": []
            }
          }
        },
        "proofs": [
          {
            "id": "inverse_product_rule:step_0a2e5fae-1eee-4f78-91f3-1428f631879f",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "inverse_product_rule:step_0a2e5fae-1eee-4f78-91f3-1428f631879f",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "inverse_product_rule:step_0a2e5fae-1eee-4f78-91f3-1428f631879f_left",
                        "content": {
                          "Text": "Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                        }
                      },
                      "rhs": {
                        "id": "inverse_product_rule:step_0a2e5fae-1eee-4f78-91f3-1428f631879f_right",
                        "content": {
                          "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })"
                        }
                      },
                      "operator": "Equal"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "inverse_product_rule:step_0a2e5fae-1eee-4f78-91f3-1428f631879f:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c7eeb5f2-5bec-4211-b94c-b555e285765e\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } }))], metadata: {}, description: None }, left: Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })) }) }"
                    }
                  },
                  {
                    "id": "inverse_product_rule:step_0a2e5fae-1eee-4f78-91f3-1428f631879f:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_41f121a8-cd8d-4386-9957-dd03cc99ca3e\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } } })), Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] })))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } } })), right: Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }))) }) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "inverse_product_rule:step_41f121a8-cd8d-4386-9957-dd03cc99ca3e",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "inverse_product_rule:step_41f121a8-cd8d-4386-9957-dd03cc99ca3e",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "inverse_product_rule:step_41f121a8-cd8d-4386-9957-dd03cc99ca3e_left",
                        "content": {
                          "Text": "Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                        }
                      },
                      "rhs": {
                        "id": "inverse_product_rule:step_41f121a8-cd8d-4386-9957-dd03cc99ca3e_right",
                        "content": {
                          "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })"
                        }
                      },
                      "operator": "Equal"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "inverse_product_rule:step_41f121a8-cd8d-4386-9957-dd03cc99ca3e:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c7eeb5f2-5bec-4211-b94c-b555e285765e\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } }))], metadata: {}, description: None }, left: Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })) }) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "inverse_product_rule:step_5cb99645-673d-41c5-bfb5-64659cbdb4c3",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "inverse_product_rule:step_5cb99645-673d-41c5-bfb5-64659cbdb4c3",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "inverse_product_rule:step_5cb99645-673d-41c5-bfb5-64659cbdb4c3_left",
                        "content": {
                          "Text": "Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                        }
                      },
                      "rhs": {
                        "id": "inverse_product_rule:step_5cb99645-673d-41c5-bfb5-64659cbdb4c3_right",
                        "content": {
                          "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })"
                        }
                      },
                      "operator": "Equal"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "inverse_product_rule:step_5cb99645-673d-41c5-bfb5-64659cbdb4c3:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c7eeb5f2-5bec-4211-b94c-b555e285765e\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } }))], metadata: {}, description: None }, left: Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })) }) }"
                    }
                  },
                  {
                    "id": "inverse_product_rule:step_5cb99645-673d-41c5-bfb5-64659cbdb4c3:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_41f121a8-cd8d-4386-9957-dd03cc99ca3e\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } } })), Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] })))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } } })), right: Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }))) }) }"
                    }
                  },
                  {
                    "id": "inverse_product_rule:step_5cb99645-673d-41c5-bfb5-64659cbdb4c3:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_0a2e5fae-1eee-4f78-91f3-1428f631879f\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } } })), Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] })))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } } })), right: Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }))) }) }"
                    }
                  },
                  {
                    "id": "inverse_product_rule:step_5cb99645-673d-41c5-bfb5-64659cbdb4c3:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_ad9a3358-3db2-4faa-b0f8-b8b4da60ba0a\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] })))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), right: Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }))) }) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "inverse_product_rule:step_7c2c63ac-3719-4372-814f-d8b4d97988ed",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "inverse_product_rule:step_7c2c63ac-3719-4372-814f-d8b4d97988ed",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "inverse_product_rule:step_7c2c63ac-3719-4372-814f-d8b4d97988ed_left",
                        "content": {
                          "Text": "Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                        }
                      },
                      "rhs": {
                        "id": "inverse_product_rule:step_7c2c63ac-3719-4372-814f-d8b4d97988ed_right",
                        "content": {
                          "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })"
                        }
                      },
                      "operator": "Equal"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "inverse_product_rule:step_7c2c63ac-3719-4372-814f-d8b4d97988ed:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c7eeb5f2-5bec-4211-b94c-b555e285765e\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } }))], metadata: {}, description: None }, left: Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })) }) }"
                    }
                  },
                  {
                    "id": "inverse_product_rule:step_7c2c63ac-3719-4372-814f-d8b4d97988ed:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_41f121a8-cd8d-4386-9957-dd03cc99ca3e\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } } })), Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] })))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } } })), right: Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }))) }) }"
                    }
                  },
                  {
                    "id": "inverse_product_rule:step_7c2c63ac-3719-4372-814f-d8b4d97988ed:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_0a2e5fae-1eee-4f78-91f3-1428f631879f\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } } })), Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] })))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } } })), right: Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }))) }) }"
                    }
                  },
                  {
                    "id": "inverse_product_rule:step_7c2c63ac-3719-4372-814f-d8b4d97988ed:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_ad9a3358-3db2-4faa-b0f8-b8b4da60ba0a\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] })))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), right: Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }))) }) }"
                    }
                  },
                  {
                    "id": "inverse_product_rule:step_7c2c63ac-3719-4372-814f-d8b4d97988ed:variable_4",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_5cb99645-673d-41c5-bfb5-64659cbdb4c3\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } }))], metadata: {}, description: None }, left: Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })) }) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "inverse_product_rule:step_ad9a3358-3db2-4faa-b0f8-b8b4da60ba0a",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "inverse_product_rule:step_ad9a3358-3db2-4faa-b0f8-b8b4da60ba0a",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "inverse_product_rule:step_ad9a3358-3db2-4faa-b0f8-b8b4da60ba0a_left",
                        "content": {
                          "Text": "Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                        }
                      },
                      "rhs": {
                        "id": "inverse_product_rule:step_ad9a3358-3db2-4faa-b0f8-b8b4da60ba0a_right",
                        "content": {
                          "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })"
                        }
                      },
                      "operator": "Equal"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "inverse_product_rule:step_ad9a3358-3db2-4faa-b0f8-b8b4da60ba0a:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c7eeb5f2-5bec-4211-b94c-b555e285765e\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } }))], metadata: {}, description: None }, left: Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })) }) }"
                    }
                  },
                  {
                    "id": "inverse_product_rule:step_ad9a3358-3db2-4faa-b0f8-b8b4da60ba0a:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_41f121a8-cd8d-4386-9957-dd03cc99ca3e\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } } })), Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] })))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } } })), right: Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }))) }) }"
                    }
                  },
                  {
                    "id": "inverse_product_rule:step_ad9a3358-3db2-4faa-b0f8-b8b4da60ba0a:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_0a2e5fae-1eee-4f78-91f3-1428f631879f\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } } })), Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] })))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } } })), right: Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }))) }) }"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    }
  },
  {
    "id": "abelian_squared_criterion",
    "content": {
      "Theorem": {
        "name": "Abelian Group Squared Criterion",
        "description": "Proof that a group is abelian if and only if (ab)² = a²b² for all a,b in the group",
        "goal": {
          "id": "abelian_squared_criterion:initial_state",
          "content": {
            "ProofGoal": {
              "statement": {
                "id": "abelian_squared_criterion:initial_state",
                "content": {
                  "Relationship": {
                    "lhs": {
                      "id": "abelian_squared_criterion:initial_state_left",
                      "content": {
                        "Relationship": {
                          "lhs": {
                            "id": "abelian_squared_criterion:initial_state_left:first",
                            "content": {
                              "Identifier": {
                                "body": "O_1",
                                "pre_script": null,
                                "mid_script": null,
                                "post_script": null,
                                "primes": 0,
                                "is_function": false
                              }
                            }
                          },
                          "rhs": {
                            "id": "abelian_squared_criterion:initial_state_left:second",
                            "content": {
                              "Identifier": {
                                "body": "O_2",
                                "pre_script": null,
                                "mid_script": null,
                                "post_script": null,
                                "primes": 0,
                                "is_function": false
                              }
                            }
                          },
                          "operator": "IsIsomorphicTo"
                        }
                      }
                    },
                    "rhs": {
                      "id": "abelian_squared_criterion:initial_state_right",
                      "content": {
                        "Relationship": {
                          "lhs": {
                            "id": "abelian_squared_criterion:initial_state_right_left",
                            "content": {
                              "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                            }
                          },
                          "rhs": {
                            "id": "abelian_squared_criterion:initial_state_right_right",
                            "content": {
                              "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                            }
                          },
                          "operator": "Equal"
                        }
                      }
                    },
                    "operator": "Equivalent"
                  }
                }
              },
              "quantifiers": [],
              "variables": []
            }
          }
        },
        "proofs": [
          {
            "id": "abelian_squared_criterion:step_06f51d3c-ca56-48b9-8062-b28777396f0c",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_06f51d3c-ca56-48b9-8062-b28777396f0c",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_06f51d3c-ca56-48b9-8062-b28777396f0c_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_06f51d3c-ca56-48b9-8062-b28777396f0c_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_06f51d3c-ca56-48b9-8062-b28777396f0c_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_06f51d3c-ca56-48b9-8062-b28777396f0c_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_06f51d3c-ca56-48b9-8062-b28777396f0c_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_06f51d3c-ca56-48b9-8062-b28777396f0c_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": []
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_48e40275-d4a2-4232-8891-5c9c499ae4cc",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_48e40275-d4a2-4232-8891-5c9c499ae4cc",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_48e40275-d4a2-4232-8891-5c9c499ae4cc_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_48e40275-d4a2-4232-8891-5c9c499ae4cc_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_48e40275-d4a2-4232-8891-5c9c499ae4cc_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_48e40275-d4a2-4232-8891-5c9c499ae4cc_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_48e40275-d4a2-4232-8891-5c9c499ae4cc_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_48e40275-d4a2-4232-8891-5c9c499ae4cc_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": []
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_4dbc71eb-a1bd-48f6-bf44-0fdc3cd462d7",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_4dbc71eb-a1bd-48f6-bf44-0fdc3cd462d7",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_4dbc71eb-a1bd-48f6-bf44-0fdc3cd462d7_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_4dbc71eb-a1bd-48f6-bf44-0fdc3cd462d7_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_4dbc71eb-a1bd-48f6-bf44-0fdc3cd462d7_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_4dbc71eb-a1bd-48f6-bf44-0fdc3cd462d7_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_4dbc71eb-a1bd-48f6-bf44-0fdc3cd462d7_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_4dbc71eb-a1bd-48f6-bf44-0fdc3cd462d7_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_4dbc71eb-a1bd-48f6-bf44-0fdc3cd462d7:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_92d8daf5-6c0f-44e4-b6bb-e8fbfac625a4\", 0), value: Var(E(62)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_4dbc71eb-a1bd-48f6-bf44-0fdc3cd462d7:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c04a6d1c-0c56-4114-866d-d735f549fca1\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } })) }) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_4dbc71eb-a1bd-48f6-bf44-0fdc3cd462d7:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_93c343e2-5587-4114-87d8-32328d59e8de\", 0), value: Var(E(63)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_4dbc71eb-a1bd-48f6-bf44-0fdc3cd462d7:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_acb0ef61-16ed-4f69-af05-e64354f0fb0e\", 0), value: Var(E(64)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_4dbc71eb-a1bd-48f6-bf44-0fdc3cd462d7:variable_4",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_f2a2eae3-6555-4f2d-9b64-1b42eea72a9b\", 0), value: Var(E(65)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_59386fc7-8c1b-497b-9a2b-5b7911004bda",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_59386fc7-8c1b-497b-9a2b-5b7911004bda",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_59386fc7-8c1b-497b-9a2b-5b7911004bda_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_59386fc7-8c1b-497b-9a2b-5b7911004bda_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_59386fc7-8c1b-497b-9a2b-5b7911004bda_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_59386fc7-8c1b-497b-9a2b-5b7911004bda_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_59386fc7-8c1b-497b-9a2b-5b7911004bda_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_59386fc7-8c1b-497b-9a2b-5b7911004bda_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_59386fc7-8c1b-497b-9a2b-5b7911004bda:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_06f51d3c-ca56-48b9-8062-b28777396f0c\", 0), value: Var(E(61)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_77420c9b-3d39-4c43-ac80-137fe4e6c73e",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_77420c9b-3d39-4c43-ac80-137fe4e6c73e",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_77420c9b-3d39-4c43-ac80-137fe4e6c73e_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_77420c9b-3d39-4c43-ac80-137fe4e6c73e_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_77420c9b-3d39-4c43-ac80-137fe4e6c73e_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_77420c9b-3d39-4c43-ac80-137fe4e6c73e_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_77420c9b-3d39-4c43-ac80-137fe4e6c73e_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_77420c9b-3d39-4c43-ac80-137fe4e6c73e_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_77420c9b-3d39-4c43-ac80-137fe4e6c73e:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_06f51d3c-ca56-48b9-8062-b28777396f0c\", 0), value: Var(E(61)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_92d8daf5-6c0f-44e4-b6bb-e8fbfac625a4",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_92d8daf5-6c0f-44e4-b6bb-e8fbfac625a4",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_92d8daf5-6c0f-44e4-b6bb-e8fbfac625a4_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_92d8daf5-6c0f-44e4-b6bb-e8fbfac625a4_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_92d8daf5-6c0f-44e4-b6bb-e8fbfac625a4_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_92d8daf5-6c0f-44e4-b6bb-e8fbfac625a4_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_92d8daf5-6c0f-44e4-b6bb-e8fbfac625a4_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_92d8daf5-6c0f-44e4-b6bb-e8fbfac625a4_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": []
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_93c343e2-5587-4114-87d8-32328d59e8de",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_93c343e2-5587-4114-87d8-32328d59e8de",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_93c343e2-5587-4114-87d8-32328d59e8de_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_93c343e2-5587-4114-87d8-32328d59e8de_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_93c343e2-5587-4114-87d8-32328d59e8de_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_93c343e2-5587-4114-87d8-32328d59e8de_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_93c343e2-5587-4114-87d8-32328d59e8de_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_93c343e2-5587-4114-87d8-32328d59e8de_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_93c343e2-5587-4114-87d8-32328d59e8de:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_92d8daf5-6c0f-44e4-b6bb-e8fbfac625a4\", 0), value: Var(E(62)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_93c343e2-5587-4114-87d8-32328d59e8de:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c04a6d1c-0c56-4114-866d-d735f549fca1\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } })) }) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_a3ce4ec8-9683-427f-9125-d0dcb1c5d469",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_a3ce4ec8-9683-427f-9125-d0dcb1c5d469",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_a3ce4ec8-9683-427f-9125-d0dcb1c5d469_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_a3ce4ec8-9683-427f-9125-d0dcb1c5d469_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_a3ce4ec8-9683-427f-9125-d0dcb1c5d469_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_a3ce4ec8-9683-427f-9125-d0dcb1c5d469_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_a3ce4ec8-9683-427f-9125-d0dcb1c5d469_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_a3ce4ec8-9683-427f-9125-d0dcb1c5d469_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_a3ce4ec8-9683-427f-9125-d0dcb1c5d469:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_92d8daf5-6c0f-44e4-b6bb-e8fbfac625a4\", 0), value: Var(E(62)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_a3ce4ec8-9683-427f-9125-d0dcb1c5d469:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c04a6d1c-0c56-4114-866d-d735f549fca1\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } })) }) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_a3ce4ec8-9683-427f-9125-d0dcb1c5d469:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_93c343e2-5587-4114-87d8-32328d59e8de\", 0), value: Var(E(63)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_a3ce4ec8-9683-427f-9125-d0dcb1c5d469:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_acb0ef61-16ed-4f69-af05-e64354f0fb0e\", 0), value: Var(E(64)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_a3ce4ec8-9683-427f-9125-d0dcb1c5d469:variable_4",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_f2a2eae3-6555-4f2d-9b64-1b42eea72a9b\", 0), value: Var(E(65)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_a3ce4ec8-9683-427f-9125-d0dcb1c5d469:variable_5",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_4dbc71eb-a1bd-48f6-bf44-0fdc3cd462d7\", 0), value: Var(E(66)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_a3ce4ec8-9683-427f-9125-d0dcb1c5d469:variable_6",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_baea55f8-5272-4458-bd11-32c83a275e04\", 0), value: Var(E(67)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_a3ce4ec8-9683-427f-9125-d0dcb1c5d469:variable_7",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c64fe7f4-a39a-4e93-b9d5-1fa548ea4b2d\", 0), value: Var(E(68)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_a773e024-cfd4-4edf-8627-acec3cdbdce5",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_a773e024-cfd4-4edf-8627-acec3cdbdce5",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_a773e024-cfd4-4edf-8627-acec3cdbdce5_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_a773e024-cfd4-4edf-8627-acec3cdbdce5_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_a773e024-cfd4-4edf-8627-acec3cdbdce5_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_a773e024-cfd4-4edf-8627-acec3cdbdce5_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_a773e024-cfd4-4edf-8627-acec3cdbdce5_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_a773e024-cfd4-4edf-8627-acec3cdbdce5_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_a773e024-cfd4-4edf-8627-acec3cdbdce5:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_06f51d3c-ca56-48b9-8062-b28777396f0c\", 0), value: Var(E(61)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_acb0ef61-16ed-4f69-af05-e64354f0fb0e",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_acb0ef61-16ed-4f69-af05-e64354f0fb0e",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_acb0ef61-16ed-4f69-af05-e64354f0fb0e_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_acb0ef61-16ed-4f69-af05-e64354f0fb0e_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_acb0ef61-16ed-4f69-af05-e64354f0fb0e_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_acb0ef61-16ed-4f69-af05-e64354f0fb0e_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_acb0ef61-16ed-4f69-af05-e64354f0fb0e_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_acb0ef61-16ed-4f69-af05-e64354f0fb0e_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_acb0ef61-16ed-4f69-af05-e64354f0fb0e:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_92d8daf5-6c0f-44e4-b6bb-e8fbfac625a4\", 0), value: Var(E(62)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_acb0ef61-16ed-4f69-af05-e64354f0fb0e:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c04a6d1c-0c56-4114-866d-d735f549fca1\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } })) }) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_acb0ef61-16ed-4f69-af05-e64354f0fb0e:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_93c343e2-5587-4114-87d8-32328d59e8de\", 0), value: Var(E(63)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_b656ffdd-ad5f-4392-9c8b-90f8a7c97887",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_b656ffdd-ad5f-4392-9c8b-90f8a7c97887",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_b656ffdd-ad5f-4392-9c8b-90f8a7c97887_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_b656ffdd-ad5f-4392-9c8b-90f8a7c97887_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_b656ffdd-ad5f-4392-9c8b-90f8a7c97887_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_b656ffdd-ad5f-4392-9c8b-90f8a7c97887_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_b656ffdd-ad5f-4392-9c8b-90f8a7c97887_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_b656ffdd-ad5f-4392-9c8b-90f8a7c97887_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_b656ffdd-ad5f-4392-9c8b-90f8a7c97887:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_06f51d3c-ca56-48b9-8062-b28777396f0c\", 0), value: Var(E(61)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_baea55f8-5272-4458-bd11-32c83a275e04",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_baea55f8-5272-4458-bd11-32c83a275e04",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_baea55f8-5272-4458-bd11-32c83a275e04_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_baea55f8-5272-4458-bd11-32c83a275e04_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_baea55f8-5272-4458-bd11-32c83a275e04_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_baea55f8-5272-4458-bd11-32c83a275e04_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_baea55f8-5272-4458-bd11-32c83a275e04_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_baea55f8-5272-4458-bd11-32c83a275e04_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_baea55f8-5272-4458-bd11-32c83a275e04:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_92d8daf5-6c0f-44e4-b6bb-e8fbfac625a4\", 0), value: Var(E(62)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_baea55f8-5272-4458-bd11-32c83a275e04:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c04a6d1c-0c56-4114-866d-d735f549fca1\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } })) }) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_baea55f8-5272-4458-bd11-32c83a275e04:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_93c343e2-5587-4114-87d8-32328d59e8de\", 0), value: Var(E(63)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_baea55f8-5272-4458-bd11-32c83a275e04:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_acb0ef61-16ed-4f69-af05-e64354f0fb0e\", 0), value: Var(E(64)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_baea55f8-5272-4458-bd11-32c83a275e04:variable_4",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_f2a2eae3-6555-4f2d-9b64-1b42eea72a9b\", 0), value: Var(E(65)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_baea55f8-5272-4458-bd11-32c83a275e04:variable_5",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_4dbc71eb-a1bd-48f6-bf44-0fdc3cd462d7\", 0), value: Var(E(66)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_c04a6d1c-0c56-4114-866d-d735f549fca1",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_c04a6d1c-0c56-4114-866d-d735f549fca1",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_c04a6d1c-0c56-4114-866d-d735f549fca1_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_c04a6d1c-0c56-4114-866d-d735f549fca1_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_c04a6d1c-0c56-4114-866d-d735f549fca1_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_c04a6d1c-0c56-4114-866d-d735f549fca1_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_c04a6d1c-0c56-4114-866d-d735f549fca1_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_c04a6d1c-0c56-4114-866d-d735f549fca1_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_c04a6d1c-0c56-4114-866d-d735f549fca1:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_92d8daf5-6c0f-44e4-b6bb-e8fbfac625a4\", 0), value: Var(E(62)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_c64fe7f4-a39a-4e93-b9d5-1fa548ea4b2d",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_c64fe7f4-a39a-4e93-b9d5-1fa548ea4b2d",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_c64fe7f4-a39a-4e93-b9d5-1fa548ea4b2d_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_c64fe7f4-a39a-4e93-b9d5-1fa548ea4b2d_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_c64fe7f4-a39a-4e93-b9d5-1fa548ea4b2d_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_c64fe7f4-a39a-4e93-b9d5-1fa548ea4b2d_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_c64fe7f4-a39a-4e93-b9d5-1fa548ea4b2d_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_c64fe7f4-a39a-4e93-b9d5-1fa548ea4b2d_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_c64fe7f4-a39a-4e93-b9d5-1fa548ea4b2d:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_92d8daf5-6c0f-44e4-b6bb-e8fbfac625a4\", 0), value: Var(E(62)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_c64fe7f4-a39a-4e93-b9d5-1fa548ea4b2d:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c04a6d1c-0c56-4114-866d-d735f549fca1\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } })) }) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_c64fe7f4-a39a-4e93-b9d5-1fa548ea4b2d:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_93c343e2-5587-4114-87d8-32328d59e8de\", 0), value: Var(E(63)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_c64fe7f4-a39a-4e93-b9d5-1fa548ea4b2d:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_acb0ef61-16ed-4f69-af05-e64354f0fb0e\", 0), value: Var(E(64)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_c64fe7f4-a39a-4e93-b9d5-1fa548ea4b2d:variable_4",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_f2a2eae3-6555-4f2d-9b64-1b42eea72a9b\", 0), value: Var(E(65)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_c64fe7f4-a39a-4e93-b9d5-1fa548ea4b2d:variable_5",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_4dbc71eb-a1bd-48f6-bf44-0fdc3cd462d7\", 0), value: Var(E(66)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_c64fe7f4-a39a-4e93-b9d5-1fa548ea4b2d:variable_6",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_baea55f8-5272-4458-bd11-32c83a275e04\", 0), value: Var(E(67)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_d2af32f5-95f3-4cce-91fb-a607aa49c682",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_d2af32f5-95f3-4cce-91fb-a607aa49c682",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_d2af32f5-95f3-4cce-91fb-a607aa49c682_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_d2af32f5-95f3-4cce-91fb-a607aa49c682_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_d2af32f5-95f3-4cce-91fb-a607aa49c682_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_d2af32f5-95f3-4cce-91fb-a607aa49c682_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_d2af32f5-95f3-4cce-91fb-a607aa49c682_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_d2af32f5-95f3-4cce-91fb-a607aa49c682_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_d2af32f5-95f3-4cce-91fb-a607aa49c682:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_06f51d3c-ca56-48b9-8062-b28777396f0c\", 0), value: Var(E(61)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_f2a2eae3-6555-4f2d-9b64-1b42eea72a9b",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_f2a2eae3-6555-4f2d-9b64-1b42eea72a9b",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_f2a2eae3-6555-4f2d-9b64-1b42eea72a9b_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_f2a2eae3-6555-4f2d-9b64-1b42eea72a9b_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_f2a2eae3-6555-4f2d-9b64-1b42eea72a9b_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_f2a2eae3-6555-4f2d-9b64-1b42eea72a9b_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_f2a2eae3-6555-4f2d-9b64-1b42eea72a9b_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_f2a2eae3-6555-4f2d-9b64-1b42eea72a9b_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_f2a2eae3-6555-4f2d-9b64-1b42eea72a9b:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_92d8daf5-6c0f-44e4-b6bb-e8fbfac625a4\", 0), value: Var(E(62)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_f2a2eae3-6555-4f2d-9b64-1b42eea72a9b:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c04a6d1c-0c56-4114-866d-d735f549fca1\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } })) }) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_f2a2eae3-6555-4f2d-9b64-1b42eea72a9b:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_93c343e2-5587-4114-87d8-32328d59e8de\", 0), value: Var(E(63)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_f2a2eae3-6555-4f2d-9b64-1b42eea72a9b:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_acb0ef61-16ed-4f69-af05-e64354f0fb0e\", 0), value: Var(E(64)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_fa5ee0ba-5d69-40d3-9a6d-3bc74d96c252",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_fa5ee0ba-5d69-40d3-9a6d-3bc74d96c252",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_fa5ee0ba-5d69-40d3-9a6d-3bc74d96c252_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_fa5ee0ba-5d69-40d3-9a6d-3bc74d96c252_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_fa5ee0ba-5d69-40d3-9a6d-3bc74d96c252_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_fa5ee0ba-5d69-40d3-9a6d-3bc74d96c252_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_fa5ee0ba-5d69-40d3-9a6d-3bc74d96c252_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_fa5ee0ba-5d69-40d3-9a6d-3bc74d96c252_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_fa5ee0ba-5d69-40d3-9a6d-3bc74d96c252:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_92d8daf5-6c0f-44e4-b6bb-e8fbfac625a4\", 0), value: Var(E(62)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_fa5ee0ba-5d69-40d3-9a6d-3bc74d96c252:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c04a6d1c-0c56-4114-866d-d735f549fca1\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } })) }) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_fa5ee0ba-5d69-40d3-9a6d-3bc74d96c252:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_93c343e2-5587-4114-87d8-32328d59e8de\", 0), value: Var(E(63)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_fa5ee0ba-5d69-40d3-9a6d-3bc74d96c252:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_acb0ef61-16ed-4f69-af05-e64354f0fb0e\", 0), value: Var(E(64)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_fa5ee0ba-5d69-40d3-9a6d-3bc74d96c252:variable_4",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_f2a2eae3-6555-4f2d-9b64-1b42eea72a9b\", 0), value: Var(E(65)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_fa5ee0ba-5d69-40d3-9a6d-3bc74d96c252:variable_5",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_4dbc71eb-a1bd-48f6-bf44-0fdc3cd462d7\", 0), value: Var(E(66)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_fa5ee0ba-5d69-40d3-9a6d-3bc74d96c252:variable_6",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_baea55f8-5272-4458-bd11-32c83a275e04\", 0), value: Var(E(67)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_fa5ee0ba-5d69-40d3-9a6d-3bc74d96c252:variable_7",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c64fe7f4-a39a-4e93-b9d5-1fa548ea4b2d\", 0), value: Var(E(68)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_fa5ee0ba-5d69-40d3-9a6d-3bc74d96c252:variable_8",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_a3ce4ec8-9683-427f-9125-d0dcb1c5d469\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } })) }) }"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    }
  },
  {
    "id": "lagrange_theorem",
    "content": {
      "Theorem": {
        "name": "Lagrange's Theorem",
        "description": "Proof that if H is a subgroup of a finite group G, then the order of H divides the order of G",
        "goal": {
          "id": "lagrange_theorem:initial_state",
          "content": {
            "ProofGoal": {
              "statement": {
                "id": "lagrange_theorem:initial_state",
                "content": {
                  "Text": "→"
                }
              },
              "quantifiers": [],
              "variables": []
            }
          }
        },
        "proofs": [
          {
            "id": "lagrange_theorem:step_41e5033a-ef10-4b00-aaa2-36657a83b46a",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "lagrange_theorem:step_41e5033a-ef10-4b00-aaa2-36657a83b46a",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "lagrange_theorem:step_41e5033a-ef10-4b00-aaa2-36657a83b46a:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_86fa47a1-3324-4501-ac88-a393fb13e68e\", 0), value: Relation(GroupTheory(IsSubgroupOf { entity: GroupRelationEntity { id: None, description: None, tags: [] }, subgroup: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"H\" })), group: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [Finite(Finite(0))] }, name: \"G\" })) })) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_41e5033a-ef10-4b00-aaa2-36657a83b46a:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c2157381-4d20-42a2-a382-e2d73efb9ec2\", 0), value: Expression(Group(Coset { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"g\" }, subgroup: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, is_left: true })) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_41e5033a-ef10-4b00-aaa2-36657a83b46a:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_7dda43f4-c58c-4b25-b0e0-53ebf21f89db\", 0), value: Var(E(76)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "lagrange_theorem:step_6e754305-ed2e-4ef3-9207-8b0cb5372c26",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "lagrange_theorem:step_6e754305-ed2e-4ef3-9207-8b0cb5372c26",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "lagrange_theorem:step_6e754305-ed2e-4ef3-9207-8b0cb5372c26:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_86fa47a1-3324-4501-ac88-a393fb13e68e\", 0), value: Relation(GroupTheory(IsSubgroupOf { entity: GroupRelationEntity { id: None, description: None, tags: [] }, subgroup: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"H\" })), group: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [Finite(Finite(0))] }, name: \"G\" })) })) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_6e754305-ed2e-4ef3-9207-8b0cb5372c26:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c2157381-4d20-42a2-a382-e2d73efb9ec2\", 0), value: Expression(Group(Coset { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"g\" }, subgroup: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, is_left: true })) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_6e754305-ed2e-4ef3-9207-8b0cb5372c26:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_7dda43f4-c58c-4b25-b0e0-53ebf21f89db\", 0), value: Var(E(76)) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_6e754305-ed2e-4ef3-9207-8b0cb5372c26:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_41e5033a-ef10-4b00-aaa2-36657a83b46a\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Var(Name(\"size_of_coset\", 1388)), Var(O(105))], metadata: {}, description: None }, left: Var(Name(\"size_of_coset\", 1388)), right: Var(O(105)) }) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_6e754305-ed2e-4ef3-9207-8b0cb5372c26:variable_4",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_9affaf5b-e95b-48f0-986c-76016f9391e0\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Var(O(105)), Var(Name(\"index_times_order_H\", 1979))], metadata: {}, description: None }, left: Var(O(105)), right: Var(Name(\"index_times_order_H\", 1979)) }) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_6e754305-ed2e-4ef3-9207-8b0cb5372c26:variable_5",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_75e6a7e9-4f6a-492a-9f31-ee82c754f689\", 0), value: Relation(GroupTheory(OrderDivides { entity: GroupRelationEntity { id: None, description: Some(\"Order of subgroup divides order of group\"), tags: [] }, group1: Var(O(105)), group2: Var(O(105)) })) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "lagrange_theorem:step_75e6a7e9-4f6a-492a-9f31-ee82c754f689",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "lagrange_theorem:step_75e6a7e9-4f6a-492a-9f31-ee82c754f689",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "lagrange_theorem:step_75e6a7e9-4f6a-492a-9f31-ee82c754f689:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_86fa47a1-3324-4501-ac88-a393fb13e68e\", 0), value: Relation(GroupTheory(IsSubgroupOf { entity: GroupRelationEntity { id: None, description: None, tags: [] }, subgroup: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"H\" })), group: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [Finite(Finite(0))] }, name: \"G\" })) })) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_75e6a7e9-4f6a-492a-9f31-ee82c754f689:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c2157381-4d20-42a2-a382-e2d73efb9ec2\", 0), value: Expression(Group(Coset { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"g\" }, subgroup: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, is_left: true })) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_75e6a7e9-4f6a-492a-9f31-ee82c754f689:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_7dda43f4-c58c-4b25-b0e0-53ebf21f89db\", 0), value: Var(E(76)) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_75e6a7e9-4f6a-492a-9f31-ee82c754f689:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_41e5033a-ef10-4b00-aaa2-36657a83b46a\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Var(Name(\"size_of_coset\", 1388)), Var(O(105))], metadata: {}, description: None }, left: Var(Name(\"size_of_coset\", 1388)), right: Var(O(105)) }) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_75e6a7e9-4f6a-492a-9f31-ee82c754f689:variable_4",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_9affaf5b-e95b-48f0-986c-76016f9391e0\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Var(O(105)), Var(Name(\"index_times_order_H\", 1979))], metadata: {}, description: None }, left: Var(O(105)), right: Var(Name(\"index_times_order_H\", 1979)) }) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "lagrange_theorem:step_7dda43f4-c58c-4b25-b0e0-53ebf21f89db",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "lagrange_theorem:step_7dda43f4-c58c-4b25-b0e0-53ebf21f89db",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "lagrange_theorem:step_7dda43f4-c58c-4b25-b0e0-53ebf21f89db:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_86fa47a1-3324-4501-ac88-a393fb13e68e\", 0), value: Relation(GroupTheory(IsSubgroupOf { entity: GroupRelationEntity { id: None, description: None, tags: [] }, subgroup: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"H\" })), group: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [Finite(Finite(0))] }, name: \"G\" })) })) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_7dda43f4-c58c-4b25-b0e0-53ebf21f89db:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c2157381-4d20-42a2-a382-e2d73efb9ec2\", 0), value: Expression(Group(Coset { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"g\" }, subgroup: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, is_left: true })) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "lagrange_theorem:step_9affaf5b-e95b-48f0-986c-76016f9391e0",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "lagrange_theorem:step_9affaf5b-e95b-48f0-986c-76016f9391e0",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "lagrange_theorem:step_9affaf5b-e95b-48f0-986c-76016f9391e0:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_86fa47a1-3324-4501-ac88-a393fb13e68e\", 0), value: Relation(GroupTheory(IsSubgroupOf { entity: GroupRelationEntity { id: None, description: None, tags: [] }, subgroup: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"H\" })), group: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [Finite(Finite(0))] }, name: \"G\" })) })) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_9affaf5b-e95b-48f0-986c-76016f9391e0:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_c2157381-4d20-42a2-a382-e2d73efb9ec2\", 0), value: Expression(Group(Coset { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"g\" }, subgroup: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, is_left: true })) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_9affaf5b-e95b-48f0-986c-76016f9391e0:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_7dda43f4-c58c-4b25-b0e0-53ebf21f89db\", 0), value: Var(E(76)) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_9affaf5b-e95b-48f0-986c-76016f9391e0:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_41e5033a-ef10-4b00-aaa2-36657a83b46a\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Var(Name(\"size_of_coset\", 1388)), Var(O(105))], metadata: {}, description: None }, left: Var(Name(\"size_of_coset\", 1388)), right: Var(O(105)) }) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "lagrange_theorem:step_c2157381-4d20-42a2-a382-e2d73efb9ec2",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "lagrange_theorem:step_c2157381-4d20-42a2-a382-e2d73efb9ec2",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "lagrange_theorem:step_c2157381-4d20-42a2-a382-e2d73efb9ec2:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_86fa47a1-3324-4501-ac88-a393fb13e68e\", 0), value: Relation(GroupTheory(IsSubgroupOf { entity: GroupRelationEntity { id: None, description: None, tags: [] }, subgroup: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"H\" })), group: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [Finite(Finite(0))] }, name: \"G\" })) })) }"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    }
  }
]