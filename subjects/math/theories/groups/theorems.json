[
  {
    "id": "inverse_uniqueness",
    "content": {
      "Theorem": {
        "name": "inverse uniqueness",
        "description": "inverse uniqueness",
        "goal": {
          "id": "inverse_uniqueness:initial_state",
          "content": {
            "ProofGoal": {
              "statement": {
                "id": "inverse_uniqueness:initial_state",
                "content": {
                  "Text": "→"
                }
              },
              "quantifiers": [],
              "variables": []
            }
          }
        },
        "proofs": [
          {
            "id": "inverse_uniqueness:step_695cef04-653b-4242-a1a6-8f21de457d36",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "inverse_uniqueness:step_695cef04-653b-4242-a1a6-8f21de457d36",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "inverse_uniqueness:step_695cef04-653b-4242-a1a6-8f21de457d36:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_f81d6785-6380-4f79-b192-97e8c5c73cc4\", 0), value: Var(E(50)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "inverse_uniqueness:step_c2ec4dd1-f654-48ec-a2ff-438a291efd8d",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "inverse_uniqueness:step_c2ec4dd1-f654-48ec-a2ff-438a291efd8d",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "inverse_uniqueness:step_c2ec4dd1-f654-48ec-a2ff-438a291efd8d:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_f81d6785-6380-4f79-b192-97e8c5c73cc4\", 0), value: Var(E(50)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "inverse_uniqueness:step_e2ae769d-0fa6-469c-b3d7-5909da65f157",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "inverse_uniqueness:step_e2ae769d-0fa6-469c-b3d7-5909da65f157",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "inverse_uniqueness:step_e2ae769d-0fa6-469c-b3d7-5909da65f157:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_f81d6785-6380-4f79-b192-97e8c5c73cc4\", 0), value: Var(E(50)) }"
                    }
                  }
                ]
              }
            }
          }
        ],
        "theory": "groups"
      }
    }
  },
  {
    "id": "identity_uniqueness",
    "content": {
      "Theorem": {
        "name": "Identity Element Uniqueness",
        "description": "Proof that the identity element in a group is unique",
        "goal": {
          "id": "identity_uniqueness:initial_state",
          "content": {
            "ProofGoal": {
              "statement": {
                "id": "identity_uniqueness:initial_state",
                "content": {
                  "Text": "→"
                }
              },
              "quantifiers": [],
              "variables": []
            }
          }
        },
        "proofs": [
          {
            "id": "identity_uniqueness:step_1826508a-ccd6-4f00-8193-d4dfdb6e7c73",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "identity_uniqueness:step_1826508a-ccd6-4f00-8193-d4dfdb6e7c73",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "identity_uniqueness:step_1826508a-ccd6-4f00-8193-d4dfdb6e7c73:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_63e28bc1-c557-47b0-a002-0f6fedf78287\", 0), value: Var(O(1)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "identity_uniqueness:step_8f6d5693-e838-41ed-9dcb-2e82c190794d",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "identity_uniqueness:step_8f6d5693-e838-41ed-9dcb-2e82c190794d",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "identity_uniqueness:step_8f6d5693-e838-41ed-9dcb-2e82c190794d:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_63e28bc1-c557-47b0-a002-0f6fedf78287\", 0), value: Var(O(1)) }"
                    }
                  },
                  {
                    "id": "identity_uniqueness:step_8f6d5693-e838-41ed-9dcb-2e82c190794d:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_1826508a-ccd6-4f00-8193-d4dfdb6e7c73\", 0), value: Var(O(2)) }"
                    }
                  },
                  {
                    "id": "identity_uniqueness:step_8f6d5693-e838-41ed-9dcb-2e82c190794d:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_b91514cc-dd55-43b5-8fd6-f4fd93674d50\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" } })), Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" } })), right: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" })) }) }"
                    }
                  },
                  {
                    "id": "identity_uniqueness:step_8f6d5693-e838-41ed-9dcb-2e82c190794d:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_a936f657-3a03-4fcd-93bd-967456c0f4d8\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" } })), Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" } })), right: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" })) }) }"
                    }
                  },
                  {
                    "id": "identity_uniqueness:step_8f6d5693-e838-41ed-9dcb-2e82c190794d:variable_4",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_902eed56-d278-40ec-a242-6c9868805774\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" })), Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" }))], metadata: {}, description: None }, left: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" })), right: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" })) }) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "identity_uniqueness:step_902eed56-d278-40ec-a242-6c9868805774",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "identity_uniqueness:step_902eed56-d278-40ec-a242-6c9868805774",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "identity_uniqueness:step_902eed56-d278-40ec-a242-6c9868805774:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_63e28bc1-c557-47b0-a002-0f6fedf78287\", 0), value: Var(O(1)) }"
                    }
                  },
                  {
                    "id": "identity_uniqueness:step_902eed56-d278-40ec-a242-6c9868805774:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_1826508a-ccd6-4f00-8193-d4dfdb6e7c73\", 0), value: Var(O(2)) }"
                    }
                  },
                  {
                    "id": "identity_uniqueness:step_902eed56-d278-40ec-a242-6c9868805774:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_b91514cc-dd55-43b5-8fd6-f4fd93674d50\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" } })), Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" } })), right: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" })) }) }"
                    }
                  },
                  {
                    "id": "identity_uniqueness:step_902eed56-d278-40ec-a242-6c9868805774:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_a936f657-3a03-4fcd-93bd-967456c0f4d8\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" } })), Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" } })), right: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" })) }) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "identity_uniqueness:step_a936f657-3a03-4fcd-93bd-967456c0f4d8",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "identity_uniqueness:step_a936f657-3a03-4fcd-93bd-967456c0f4d8",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "identity_uniqueness:step_a936f657-3a03-4fcd-93bd-967456c0f4d8:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_63e28bc1-c557-47b0-a002-0f6fedf78287\", 0), value: Var(O(1)) }"
                    }
                  },
                  {
                    "id": "identity_uniqueness:step_a936f657-3a03-4fcd-93bd-967456c0f4d8:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_1826508a-ccd6-4f00-8193-d4dfdb6e7c73\", 0), value: Var(O(2)) }"
                    }
                  },
                  {
                    "id": "identity_uniqueness:step_a936f657-3a03-4fcd-93bd-967456c0f4d8:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_b91514cc-dd55-43b5-8fd6-f4fd93674d50\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" } })), Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e1\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" } })), right: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"e2\" })) }) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "identity_uniqueness:step_b91514cc-dd55-43b5-8fd6-f4fd93674d50",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "identity_uniqueness:step_b91514cc-dd55-43b5-8fd6-f4fd93674d50",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "identity_uniqueness:step_b91514cc-dd55-43b5-8fd6-f4fd93674d50:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_63e28bc1-c557-47b0-a002-0f6fedf78287\", 0), value: Var(O(1)) }"
                    }
                  },
                  {
                    "id": "identity_uniqueness:step_b91514cc-dd55-43b5-8fd6-f4fd93674d50:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_1826508a-ccd6-4f00-8193-d4dfdb6e7c73\", 0), value: Var(O(2)) }"
                    }
                  }
                ]
              }
            }
          }
        ],
        "theory": "groups"
      }
    }
  },
  {
    "id": "inverse_product_rule",
    "content": {
      "Theorem": {
        "name": "Group Inverse Product Rule",
        "description": "Proof that in a group, (ab)⁻¹ = b⁻¹a⁻¹",
        "goal": {
          "id": "inverse_product_rule:initial_state",
          "content": {
            "ProofGoal": {
              "statement": {
                "id": "inverse_product_rule:initial_state",
                "content": {
                  "Relationship": {
                    "lhs": {
                      "id": "inverse_product_rule:initial_state_left",
                      "content": {
                        "Text": "Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                      }
                    },
                    "rhs": {
                      "id": "inverse_product_rule:initial_state_right",
                      "content": {
                        "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })"
                      }
                    },
                    "operator": "Equal"
                  }
                }
              },
              "quantifiers": [],
              "variables": []
            }
          }
        },
        "proofs": [
          {
            "id": "inverse_product_rule:step_4c7f45c3-c31d-469c-8cbe-37153e587587",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "inverse_product_rule:step_4c7f45c3-c31d-469c-8cbe-37153e587587",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "inverse_product_rule:step_4c7f45c3-c31d-469c-8cbe-37153e587587_left",
                        "content": {
                          "Text": "Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                        }
                      },
                      "rhs": {
                        "id": "inverse_product_rule:step_4c7f45c3-c31d-469c-8cbe-37153e587587_right",
                        "content": {
                          "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })"
                        }
                      },
                      "operator": "Equal"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "inverse_product_rule:step_4c7f45c3-c31d-469c-8cbe-37153e587587:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_3532577d-4a4e-4778-8e59-57f2c377472b\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } }))], metadata: {}, description: None }, left: Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })) }) }"
                    }
                  },
                  {
                    "id": "inverse_product_rule:step_4c7f45c3-c31d-469c-8cbe-37153e587587:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_b94398e0-e11c-4bc9-a8ed-3d29ce5edeeb\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } } })), Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] })))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } } })), right: Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }))) }) }"
                    }
                  },
                  {
                    "id": "inverse_product_rule:step_4c7f45c3-c31d-469c-8cbe-37153e587587:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_94185ccd-7491-410c-a8f7-a01b682f86b7\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } } })), Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] })))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } } })), right: Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }))) }) }"
                    }
                  },
                  {
                    "id": "inverse_product_rule:step_4c7f45c3-c31d-469c-8cbe-37153e587587:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_b2991b84-3dfb-4624-89eb-ea27a8e047ef\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] })))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), right: Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }))) }) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "inverse_product_rule:step_6e0d245b-61fe-4dd7-9a40-d76c17e3a2b7",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "inverse_product_rule:step_6e0d245b-61fe-4dd7-9a40-d76c17e3a2b7",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "inverse_product_rule:step_6e0d245b-61fe-4dd7-9a40-d76c17e3a2b7_left",
                        "content": {
                          "Text": "Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                        }
                      },
                      "rhs": {
                        "id": "inverse_product_rule:step_6e0d245b-61fe-4dd7-9a40-d76c17e3a2b7_right",
                        "content": {
                          "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })"
                        }
                      },
                      "operator": "Equal"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "inverse_product_rule:step_6e0d245b-61fe-4dd7-9a40-d76c17e3a2b7:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_3532577d-4a4e-4778-8e59-57f2c377472b\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } }))], metadata: {}, description: None }, left: Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })) }) }"
                    }
                  },
                  {
                    "id": "inverse_product_rule:step_6e0d245b-61fe-4dd7-9a40-d76c17e3a2b7:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_b94398e0-e11c-4bc9-a8ed-3d29ce5edeeb\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } } })), Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] })))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } } })), right: Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }))) }) }"
                    }
                  },
                  {
                    "id": "inverse_product_rule:step_6e0d245b-61fe-4dd7-9a40-d76c17e3a2b7:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_94185ccd-7491-410c-a8f7-a01b682f86b7\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } } })), Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] })))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } } })), right: Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }))) }) }"
                    }
                  },
                  {
                    "id": "inverse_product_rule:step_6e0d245b-61fe-4dd7-9a40-d76c17e3a2b7:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_b2991b84-3dfb-4624-89eb-ea27a8e047ef\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] })))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), right: Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }))) }) }"
                    }
                  },
                  {
                    "id": "inverse_product_rule:step_6e0d245b-61fe-4dd7-9a40-d76c17e3a2b7:variable_4",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_4c7f45c3-c31d-469c-8cbe-37153e587587\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } }))], metadata: {}, description: None }, left: Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })) }) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "inverse_product_rule:step_94185ccd-7491-410c-a8f7-a01b682f86b7",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "inverse_product_rule:step_94185ccd-7491-410c-a8f7-a01b682f86b7",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "inverse_product_rule:step_94185ccd-7491-410c-a8f7-a01b682f86b7_left",
                        "content": {
                          "Text": "Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                        }
                      },
                      "rhs": {
                        "id": "inverse_product_rule:step_94185ccd-7491-410c-a8f7-a01b682f86b7_right",
                        "content": {
                          "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })"
                        }
                      },
                      "operator": "Equal"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "inverse_product_rule:step_94185ccd-7491-410c-a8f7-a01b682f86b7:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_3532577d-4a4e-4778-8e59-57f2c377472b\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } }))], metadata: {}, description: None }, left: Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })) }) }"
                    }
                  },
                  {
                    "id": "inverse_product_rule:step_94185ccd-7491-410c-a8f7-a01b682f86b7:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_b94398e0-e11c-4bc9-a8ed-3d29ce5edeeb\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } } })), Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] })))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } } })), right: Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }))) }) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "inverse_product_rule:step_b2991b84-3dfb-4624-89eb-ea27a8e047ef",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "inverse_product_rule:step_b2991b84-3dfb-4624-89eb-ea27a8e047ef",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "inverse_product_rule:step_b2991b84-3dfb-4624-89eb-ea27a8e047ef_left",
                        "content": {
                          "Text": "Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                        }
                      },
                      "rhs": {
                        "id": "inverse_product_rule:step_b2991b84-3dfb-4624-89eb-ea27a8e047ef_right",
                        "content": {
                          "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })"
                        }
                      },
                      "operator": "Equal"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "inverse_product_rule:step_b2991b84-3dfb-4624-89eb-ea27a8e047ef:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_3532577d-4a4e-4778-8e59-57f2c377472b\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } }))], metadata: {}, description: None }, left: Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })) }) }"
                    }
                  },
                  {
                    "id": "inverse_product_rule:step_b2991b84-3dfb-4624-89eb-ea27a8e047ef:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_b94398e0-e11c-4bc9-a8ed-3d29ce5edeeb\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } } })), Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] })))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } } })), right: Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }))) }) }"
                    }
                  },
                  {
                    "id": "inverse_product_rule:step_b2991b84-3dfb-4624-89eb-ea27a8e047ef:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_94185ccd-7491-410c-a8f7-a01b682f86b7\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } } })), Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] })))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } } })), right: Expression(Group(Identity(Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }))) }) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "inverse_product_rule:step_b94398e0-e11c-4bc9-a8ed-3d29ce5edeeb",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "inverse_product_rule:step_b94398e0-e11c-4bc9-a8ed-3d29ce5edeeb",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "inverse_product_rule:step_b94398e0-e11c-4bc9-a8ed-3d29ce5edeeb_left",
                        "content": {
                          "Text": "Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                        }
                      },
                      "rhs": {
                        "id": "inverse_product_rule:step_b94398e0-e11c-4bc9-a8ed-3d29ce5edeeb_right",
                        "content": {
                          "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })"
                        }
                      },
                      "operator": "Equal"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "inverse_product_rule:step_b94398e0-e11c-4bc9-a8ed-3d29ce5edeeb:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_3532577d-4a4e-4778-8e59-57f2c377472b\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } }))], metadata: {}, description: None }, left: Expression(Group(Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Inverse { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } } })) }) }"
                    }
                  }
                ]
              }
            }
          }
        ],
        "theory": "groups"
      }
    }
  },
  {
    "id": "abelian_squared_criterion",
    "content": {
      "Theorem": {
        "name": "Abelian Group Squared Criterion",
        "description": "Proof that a group is abelian if and only if (ab)² = a²b² for all a,b in the group",
        "goal": {
          "id": "abelian_squared_criterion:initial_state",
          "content": {
            "ProofGoal": {
              "statement": {
                "id": "abelian_squared_criterion:initial_state",
                "content": {
                  "Relationship": {
                    "lhs": {
                      "id": "abelian_squared_criterion:initial_state_left",
                      "content": {
                        "Relationship": {
                          "lhs": {
                            "id": "abelian_squared_criterion:initial_state_left:first",
                            "content": {
                              "Identifier": {
                                "body": "O_1",
                                "pre_script": null,
                                "mid_script": null,
                                "post_script": null,
                                "primes": 0,
                                "is_function": false
                              }
                            }
                          },
                          "rhs": {
                            "id": "abelian_squared_criterion:initial_state_left:second",
                            "content": {
                              "Identifier": {
                                "body": "O_2",
                                "pre_script": null,
                                "mid_script": null,
                                "post_script": null,
                                "primes": 0,
                                "is_function": false
                              }
                            }
                          },
                          "operator": "IsIsomorphicTo"
                        }
                      }
                    },
                    "rhs": {
                      "id": "abelian_squared_criterion:initial_state_right",
                      "content": {
                        "Relationship": {
                          "lhs": {
                            "id": "abelian_squared_criterion:initial_state_right_left",
                            "content": {
                              "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                            }
                          },
                          "rhs": {
                            "id": "abelian_squared_criterion:initial_state_right_right",
                            "content": {
                              "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                            }
                          },
                          "operator": "Equal"
                        }
                      }
                    },
                    "operator": "Equivalent"
                  }
                }
              },
              "quantifiers": [],
              "variables": []
            }
          }
        },
        "proofs": [
          {
            "id": "abelian_squared_criterion:step_0420d33f-27bc-456d-9794-35f00941e0a1",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_0420d33f-27bc-456d-9794-35f00941e0a1",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_0420d33f-27bc-456d-9794-35f00941e0a1_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_0420d33f-27bc-456d-9794-35f00941e0a1_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_0420d33f-27bc-456d-9794-35f00941e0a1_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_0420d33f-27bc-456d-9794-35f00941e0a1_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_0420d33f-27bc-456d-9794-35f00941e0a1_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_0420d33f-27bc-456d-9794-35f00941e0a1_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": []
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_07e70001-3008-42f8-ad0f-bddd09da613a",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_07e70001-3008-42f8-ad0f-bddd09da613a",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_07e70001-3008-42f8-ad0f-bddd09da613a_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_07e70001-3008-42f8-ad0f-bddd09da613a_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_07e70001-3008-42f8-ad0f-bddd09da613a_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_07e70001-3008-42f8-ad0f-bddd09da613a_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_07e70001-3008-42f8-ad0f-bddd09da613a_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_07e70001-3008-42f8-ad0f-bddd09da613a_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_07e70001-3008-42f8-ad0f-bddd09da613a:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_723e832e-1259-40bc-89ad-fe0e5a346ccf\", 0), value: Var(E(62)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_07e70001-3008-42f8-ad0f-bddd09da613a:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_0b584c4a-a83b-4c24-ae0b-d400c19c0baa\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } })) }) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_07e70001-3008-42f8-ad0f-bddd09da613a:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_101bf289-b73f-4e61-ba2f-89ab9245d4fd\", 0), value: Var(E(63)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_07e70001-3008-42f8-ad0f-bddd09da613a:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_e4a53542-91bc-4074-9476-33dfe68b2014\", 0), value: Var(E(64)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_0b584c4a-a83b-4c24-ae0b-d400c19c0baa",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_0b584c4a-a83b-4c24-ae0b-d400c19c0baa",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_0b584c4a-a83b-4c24-ae0b-d400c19c0baa_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_0b584c4a-a83b-4c24-ae0b-d400c19c0baa_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_0b584c4a-a83b-4c24-ae0b-d400c19c0baa_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_0b584c4a-a83b-4c24-ae0b-d400c19c0baa_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_0b584c4a-a83b-4c24-ae0b-d400c19c0baa_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_0b584c4a-a83b-4c24-ae0b-d400c19c0baa_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_0b584c4a-a83b-4c24-ae0b-d400c19c0baa:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_723e832e-1259-40bc-89ad-fe0e5a346ccf\", 0), value: Var(E(62)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_101bf289-b73f-4e61-ba2f-89ab9245d4fd",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_101bf289-b73f-4e61-ba2f-89ab9245d4fd",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_101bf289-b73f-4e61-ba2f-89ab9245d4fd_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_101bf289-b73f-4e61-ba2f-89ab9245d4fd_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_101bf289-b73f-4e61-ba2f-89ab9245d4fd_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_101bf289-b73f-4e61-ba2f-89ab9245d4fd_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_101bf289-b73f-4e61-ba2f-89ab9245d4fd_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_101bf289-b73f-4e61-ba2f-89ab9245d4fd_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_101bf289-b73f-4e61-ba2f-89ab9245d4fd:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_723e832e-1259-40bc-89ad-fe0e5a346ccf\", 0), value: Var(E(62)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_101bf289-b73f-4e61-ba2f-89ab9245d4fd:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_0b584c4a-a83b-4c24-ae0b-d400c19c0baa\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } })) }) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_2773cca2-be76-471e-8c2f-8b7322a02126",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_2773cca2-be76-471e-8c2f-8b7322a02126",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_2773cca2-be76-471e-8c2f-8b7322a02126_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_2773cca2-be76-471e-8c2f-8b7322a02126_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_2773cca2-be76-471e-8c2f-8b7322a02126_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_2773cca2-be76-471e-8c2f-8b7322a02126_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_2773cca2-be76-471e-8c2f-8b7322a02126_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_2773cca2-be76-471e-8c2f-8b7322a02126_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_2773cca2-be76-471e-8c2f-8b7322a02126:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_723e832e-1259-40bc-89ad-fe0e5a346ccf\", 0), value: Var(E(62)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_2773cca2-be76-471e-8c2f-8b7322a02126:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_0b584c4a-a83b-4c24-ae0b-d400c19c0baa\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } })) }) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_2773cca2-be76-471e-8c2f-8b7322a02126:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_101bf289-b73f-4e61-ba2f-89ab9245d4fd\", 0), value: Var(E(63)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_2773cca2-be76-471e-8c2f-8b7322a02126:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_e4a53542-91bc-4074-9476-33dfe68b2014\", 0), value: Var(E(64)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_2773cca2-be76-471e-8c2f-8b7322a02126:variable_4",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_07e70001-3008-42f8-ad0f-bddd09da613a\", 0), value: Var(E(65)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_32ae2d85-650a-4063-8de2-185c5730c81b",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_32ae2d85-650a-4063-8de2-185c5730c81b",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_32ae2d85-650a-4063-8de2-185c5730c81b_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_32ae2d85-650a-4063-8de2-185c5730c81b_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_32ae2d85-650a-4063-8de2-185c5730c81b_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_32ae2d85-650a-4063-8de2-185c5730c81b_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_32ae2d85-650a-4063-8de2-185c5730c81b_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_32ae2d85-650a-4063-8de2-185c5730c81b_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_32ae2d85-650a-4063-8de2-185c5730c81b:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_723e832e-1259-40bc-89ad-fe0e5a346ccf\", 0), value: Var(E(62)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_32ae2d85-650a-4063-8de2-185c5730c81b:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_0b584c4a-a83b-4c24-ae0b-d400c19c0baa\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } })) }) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_32ae2d85-650a-4063-8de2-185c5730c81b:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_101bf289-b73f-4e61-ba2f-89ab9245d4fd\", 0), value: Var(E(63)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_32ae2d85-650a-4063-8de2-185c5730c81b:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_e4a53542-91bc-4074-9476-33dfe68b2014\", 0), value: Var(E(64)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_32ae2d85-650a-4063-8de2-185c5730c81b:variable_4",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_07e70001-3008-42f8-ad0f-bddd09da613a\", 0), value: Var(E(65)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_32ae2d85-650a-4063-8de2-185c5730c81b:variable_5",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_2773cca2-be76-471e-8c2f-8b7322a02126\", 0), value: Var(E(66)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_32ae2d85-650a-4063-8de2-185c5730c81b:variable_6",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_612600a5-83fc-42a0-8ce7-8290c33bb0d8\", 0), value: Var(E(67)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_32ae2d85-650a-4063-8de2-185c5730c81b:variable_7",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_90956895-cfcf-4b08-9ef2-8034392e44be\", 0), value: Var(E(68)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_38d0d177-ed65-4eb1-8a4f-b844f4202403",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_38d0d177-ed65-4eb1-8a4f-b844f4202403",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_38d0d177-ed65-4eb1-8a4f-b844f4202403_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_38d0d177-ed65-4eb1-8a4f-b844f4202403_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_38d0d177-ed65-4eb1-8a4f-b844f4202403_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_38d0d177-ed65-4eb1-8a4f-b844f4202403_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_38d0d177-ed65-4eb1-8a4f-b844f4202403_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_38d0d177-ed65-4eb1-8a4f-b844f4202403_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_38d0d177-ed65-4eb1-8a4f-b844f4202403:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_0420d33f-27bc-456d-9794-35f00941e0a1\", 0), value: Var(E(61)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_51279370-5c88-4642-b780-2fc435255f17",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_51279370-5c88-4642-b780-2fc435255f17",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_51279370-5c88-4642-b780-2fc435255f17_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_51279370-5c88-4642-b780-2fc435255f17_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_51279370-5c88-4642-b780-2fc435255f17_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_51279370-5c88-4642-b780-2fc435255f17_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_51279370-5c88-4642-b780-2fc435255f17_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_51279370-5c88-4642-b780-2fc435255f17_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_51279370-5c88-4642-b780-2fc435255f17:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_0420d33f-27bc-456d-9794-35f00941e0a1\", 0), value: Var(E(61)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_5a735c6d-1e28-437c-8e23-083f536ac607",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_5a735c6d-1e28-437c-8e23-083f536ac607",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_5a735c6d-1e28-437c-8e23-083f536ac607_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_5a735c6d-1e28-437c-8e23-083f536ac607_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_5a735c6d-1e28-437c-8e23-083f536ac607_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_5a735c6d-1e28-437c-8e23-083f536ac607_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_5a735c6d-1e28-437c-8e23-083f536ac607_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_5a735c6d-1e28-437c-8e23-083f536ac607_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_5a735c6d-1e28-437c-8e23-083f536ac607:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_0420d33f-27bc-456d-9794-35f00941e0a1\", 0), value: Var(E(61)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_612600a5-83fc-42a0-8ce7-8290c33bb0d8",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_612600a5-83fc-42a0-8ce7-8290c33bb0d8",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_612600a5-83fc-42a0-8ce7-8290c33bb0d8_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_612600a5-83fc-42a0-8ce7-8290c33bb0d8_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_612600a5-83fc-42a0-8ce7-8290c33bb0d8_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_612600a5-83fc-42a0-8ce7-8290c33bb0d8_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_612600a5-83fc-42a0-8ce7-8290c33bb0d8_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_612600a5-83fc-42a0-8ce7-8290c33bb0d8_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_612600a5-83fc-42a0-8ce7-8290c33bb0d8:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_723e832e-1259-40bc-89ad-fe0e5a346ccf\", 0), value: Var(E(62)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_612600a5-83fc-42a0-8ce7-8290c33bb0d8:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_0b584c4a-a83b-4c24-ae0b-d400c19c0baa\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } })) }) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_612600a5-83fc-42a0-8ce7-8290c33bb0d8:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_101bf289-b73f-4e61-ba2f-89ab9245d4fd\", 0), value: Var(E(63)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_612600a5-83fc-42a0-8ce7-8290c33bb0d8:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_e4a53542-91bc-4074-9476-33dfe68b2014\", 0), value: Var(E(64)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_612600a5-83fc-42a0-8ce7-8290c33bb0d8:variable_4",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_07e70001-3008-42f8-ad0f-bddd09da613a\", 0), value: Var(E(65)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_612600a5-83fc-42a0-8ce7-8290c33bb0d8:variable_5",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_2773cca2-be76-471e-8c2f-8b7322a02126\", 0), value: Var(E(66)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_617390a1-6e64-4643-82b8-ef57dfaba505",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_617390a1-6e64-4643-82b8-ef57dfaba505",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_617390a1-6e64-4643-82b8-ef57dfaba505_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_617390a1-6e64-4643-82b8-ef57dfaba505_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_617390a1-6e64-4643-82b8-ef57dfaba505_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_617390a1-6e64-4643-82b8-ef57dfaba505_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_617390a1-6e64-4643-82b8-ef57dfaba505_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_617390a1-6e64-4643-82b8-ef57dfaba505_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_617390a1-6e64-4643-82b8-ef57dfaba505:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_0420d33f-27bc-456d-9794-35f00941e0a1\", 0), value: Var(E(61)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_6fcd9e65-80f6-427b-91b8-1aaf731f9eef",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_6fcd9e65-80f6-427b-91b8-1aaf731f9eef",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_6fcd9e65-80f6-427b-91b8-1aaf731f9eef_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_6fcd9e65-80f6-427b-91b8-1aaf731f9eef_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_6fcd9e65-80f6-427b-91b8-1aaf731f9eef_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_6fcd9e65-80f6-427b-91b8-1aaf731f9eef_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_6fcd9e65-80f6-427b-91b8-1aaf731f9eef_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_6fcd9e65-80f6-427b-91b8-1aaf731f9eef_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_6fcd9e65-80f6-427b-91b8-1aaf731f9eef:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_0420d33f-27bc-456d-9794-35f00941e0a1\", 0), value: Var(E(61)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_723e832e-1259-40bc-89ad-fe0e5a346ccf",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_723e832e-1259-40bc-89ad-fe0e5a346ccf",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_723e832e-1259-40bc-89ad-fe0e5a346ccf_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_723e832e-1259-40bc-89ad-fe0e5a346ccf_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_723e832e-1259-40bc-89ad-fe0e5a346ccf_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_723e832e-1259-40bc-89ad-fe0e5a346ccf_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_723e832e-1259-40bc-89ad-fe0e5a346ccf_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_723e832e-1259-40bc-89ad-fe0e5a346ccf_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": []
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_8516fa9f-f44e-43b2-a532-b729a20c8fc7",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_8516fa9f-f44e-43b2-a532-b729a20c8fc7",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_8516fa9f-f44e-43b2-a532-b729a20c8fc7_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_8516fa9f-f44e-43b2-a532-b729a20c8fc7_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_8516fa9f-f44e-43b2-a532-b729a20c8fc7_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_8516fa9f-f44e-43b2-a532-b729a20c8fc7_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_8516fa9f-f44e-43b2-a532-b729a20c8fc7_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_8516fa9f-f44e-43b2-a532-b729a20c8fc7_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_8516fa9f-f44e-43b2-a532-b729a20c8fc7:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_723e832e-1259-40bc-89ad-fe0e5a346ccf\", 0), value: Var(E(62)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_8516fa9f-f44e-43b2-a532-b729a20c8fc7:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_0b584c4a-a83b-4c24-ae0b-d400c19c0baa\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } })) }) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_8516fa9f-f44e-43b2-a532-b729a20c8fc7:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_101bf289-b73f-4e61-ba2f-89ab9245d4fd\", 0), value: Var(E(63)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_8516fa9f-f44e-43b2-a532-b729a20c8fc7:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_e4a53542-91bc-4074-9476-33dfe68b2014\", 0), value: Var(E(64)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_8516fa9f-f44e-43b2-a532-b729a20c8fc7:variable_4",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_07e70001-3008-42f8-ad0f-bddd09da613a\", 0), value: Var(E(65)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_8516fa9f-f44e-43b2-a532-b729a20c8fc7:variable_5",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_2773cca2-be76-471e-8c2f-8b7322a02126\", 0), value: Var(E(66)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_8516fa9f-f44e-43b2-a532-b729a20c8fc7:variable_6",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_612600a5-83fc-42a0-8ce7-8290c33bb0d8\", 0), value: Var(E(67)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_8516fa9f-f44e-43b2-a532-b729a20c8fc7:variable_7",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_90956895-cfcf-4b08-9ef2-8034392e44be\", 0), value: Var(E(68)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_8516fa9f-f44e-43b2-a532-b729a20c8fc7:variable_8",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_32ae2d85-650a-4063-8de2-185c5730c81b\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } })) }) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_90956895-cfcf-4b08-9ef2-8034392e44be",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_90956895-cfcf-4b08-9ef2-8034392e44be",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_90956895-cfcf-4b08-9ef2-8034392e44be_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_90956895-cfcf-4b08-9ef2-8034392e44be_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_90956895-cfcf-4b08-9ef2-8034392e44be_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_90956895-cfcf-4b08-9ef2-8034392e44be_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_90956895-cfcf-4b08-9ef2-8034392e44be_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_90956895-cfcf-4b08-9ef2-8034392e44be_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_90956895-cfcf-4b08-9ef2-8034392e44be:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_723e832e-1259-40bc-89ad-fe0e5a346ccf\", 0), value: Var(E(62)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_90956895-cfcf-4b08-9ef2-8034392e44be:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_0b584c4a-a83b-4c24-ae0b-d400c19c0baa\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } })) }) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_90956895-cfcf-4b08-9ef2-8034392e44be:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_101bf289-b73f-4e61-ba2f-89ab9245d4fd\", 0), value: Var(E(63)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_90956895-cfcf-4b08-9ef2-8034392e44be:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_e4a53542-91bc-4074-9476-33dfe68b2014\", 0), value: Var(E(64)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_90956895-cfcf-4b08-9ef2-8034392e44be:variable_4",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_07e70001-3008-42f8-ad0f-bddd09da613a\", 0), value: Var(E(65)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_90956895-cfcf-4b08-9ef2-8034392e44be:variable_5",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_2773cca2-be76-471e-8c2f-8b7322a02126\", 0), value: Var(E(66)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_90956895-cfcf-4b08-9ef2-8034392e44be:variable_6",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_612600a5-83fc-42a0-8ce7-8290c33bb0d8\", 0), value: Var(E(67)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_b9859816-f2ae-4f9c-904f-6e165692f142",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_b9859816-f2ae-4f9c-904f-6e165692f142",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_b9859816-f2ae-4f9c-904f-6e165692f142_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_b9859816-f2ae-4f9c-904f-6e165692f142_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_b9859816-f2ae-4f9c-904f-6e165692f142_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_b9859816-f2ae-4f9c-904f-6e165692f142_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_b9859816-f2ae-4f9c-904f-6e165692f142_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_b9859816-f2ae-4f9c-904f-6e165692f142_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": []
              }
            }
          },
          {
            "id": "abelian_squared_criterion:step_e4a53542-91bc-4074-9476-33dfe68b2014",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "abelian_squared_criterion:step_e4a53542-91bc-4074-9476-33dfe68b2014",
                  "content": {
                    "Relationship": {
                      "lhs": {
                        "id": "abelian_squared_criterion:step_e4a53542-91bc-4074-9476-33dfe68b2014_left",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_e4a53542-91bc-4074-9476-33dfe68b2014_left:first",
                              "content": {
                                "Identifier": {
                                  "body": "O_1",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_e4a53542-91bc-4074-9476-33dfe68b2014_left:second",
                              "content": {
                                "Identifier": {
                                  "body": "O_2",
                                  "pre_script": null,
                                  "mid_script": null,
                                  "post_script": null,
                                  "primes": 0,
                                  "is_function": false
                                }
                              }
                            },
                            "operator": "IsIsomorphicTo"
                          }
                        }
                      },
                      "rhs": {
                        "id": "abelian_squared_criterion:step_e4a53542-91bc-4074-9476-33dfe68b2014_right",
                        "content": {
                          "Relationship": {
                            "lhs": {
                              "id": "abelian_squared_criterion:step_e4a53542-91bc-4074-9476-33dfe68b2014_right_left",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "rhs": {
                              "id": "abelian_squared_criterion:step_e4a53542-91bc-4074-9476-33dfe68b2014_right_right",
                              "content": {
                                "Text": "Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }, right: Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } } })"
                              }
                            },
                            "operator": "Equal"
                          }
                        }
                      },
                      "operator": "Equivalent"
                    }
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "abelian_squared_criterion:step_e4a53542-91bc-4074-9476-33dfe68b2014:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_723e832e-1259-40bc-89ad-fe0e5a346ccf\", 0), value: Var(E(62)) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_e4a53542-91bc-4074-9476-33dfe68b2014:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_0b584c4a-a83b-4c24-ae0b-d400c19c0baa\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } }))], metadata: {}, description: None }, left: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" } })), right: Expression(Group(Operation { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, left: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"b\" }, right: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"a\" } })) }) }"
                    }
                  },
                  {
                    "id": "abelian_squared_criterion:step_e4a53542-91bc-4074-9476-33dfe68b2014:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_101bf289-b73f-4e61-ba2f-89ab9245d4fd\", 0), value: Var(E(63)) }"
                    }
                  }
                ]
              }
            }
          }
        ],
        "theory": "groups"
      }
    }
  },
  {
    "id": "lagrange_theorem",
    "content": {
      "Theorem": {
        "name": "Lagrange's Theorem",
        "description": "Proof that if H is a subgroup of a finite group G, then the order of H divides the order of G",
        "goal": {
          "id": "lagrange_theorem:initial_state",
          "content": {
            "ProofGoal": {
              "statement": {
                "id": "lagrange_theorem:initial_state",
                "content": {
                  "Text": "→"
                }
              },
              "quantifiers": [],
              "variables": []
            }
          }
        },
        "proofs": [
          {
            "id": "lagrange_theorem:step_25770251-4620-4ced-bd3f-733597a6586c",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "lagrange_theorem:step_25770251-4620-4ced-bd3f-733597a6586c",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "lagrange_theorem:step_25770251-4620-4ced-bd3f-733597a6586c:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_be16379e-673c-4e06-8a85-41bc13c7daa7\", 0), value: Relation(GroupTheory(IsSubgroupOf { entity: GroupRelationEntity { id: None, description: None, tags: [] }, subgroup: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"H\" })), group: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [Finite(Finite(0))] }, name: \"G\" })) })) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_25770251-4620-4ced-bd3f-733597a6586c:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_37553419-f0c0-4793-ba91-1e510de71c1c\", 0), value: Expression(Group(Coset { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"g\" }, subgroup: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, is_left: true })) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_25770251-4620-4ced-bd3f-733597a6586c:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_a06f7a60-37ca-4cc2-9dc2-105916a68ca9\", 0), value: Var(E(76)) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "lagrange_theorem:step_37553419-f0c0-4793-ba91-1e510de71c1c",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "lagrange_theorem:step_37553419-f0c0-4793-ba91-1e510de71c1c",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "lagrange_theorem:step_37553419-f0c0-4793-ba91-1e510de71c1c:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_be16379e-673c-4e06-8a85-41bc13c7daa7\", 0), value: Relation(GroupTheory(IsSubgroupOf { entity: GroupRelationEntity { id: None, description: None, tags: [] }, subgroup: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"H\" })), group: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [Finite(Finite(0))] }, name: \"G\" })) })) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "lagrange_theorem:step_72e9bd4b-647c-4bdb-9f93-1c3f379fea23",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "lagrange_theorem:step_72e9bd4b-647c-4bdb-9f93-1c3f379fea23",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "lagrange_theorem:step_72e9bd4b-647c-4bdb-9f93-1c3f379fea23:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_be16379e-673c-4e06-8a85-41bc13c7daa7\", 0), value: Relation(GroupTheory(IsSubgroupOf { entity: GroupRelationEntity { id: None, description: None, tags: [] }, subgroup: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"H\" })), group: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [Finite(Finite(0))] }, name: \"G\" })) })) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_72e9bd4b-647c-4bdb-9f93-1c3f379fea23:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_37553419-f0c0-4793-ba91-1e510de71c1c\", 0), value: Expression(Group(Coset { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"g\" }, subgroup: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, is_left: true })) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_72e9bd4b-647c-4bdb-9f93-1c3f379fea23:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_a06f7a60-37ca-4cc2-9dc2-105916a68ca9\", 0), value: Var(E(76)) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_72e9bd4b-647c-4bdb-9f93-1c3f379fea23:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_25770251-4620-4ced-bd3f-733597a6586c\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Var(Name(\"size_of_coset\", 1388)), Var(O(105))], metadata: {}, description: None }, left: Var(Name(\"size_of_coset\", 1388)), right: Var(O(105)) }) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_72e9bd4b-647c-4bdb-9f93-1c3f379fea23:variable_4",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_93b3b5e9-3eea-4147-9604-15dfd5f34f41\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Var(O(105)), Var(Name(\"index_times_order_H\", 1979))], metadata: {}, description: None }, left: Var(O(105)), right: Var(Name(\"index_times_order_H\", 1979)) }) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "lagrange_theorem:step_93b3b5e9-3eea-4147-9604-15dfd5f34f41",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "lagrange_theorem:step_93b3b5e9-3eea-4147-9604-15dfd5f34f41",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "lagrange_theorem:step_93b3b5e9-3eea-4147-9604-15dfd5f34f41:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_be16379e-673c-4e06-8a85-41bc13c7daa7\", 0), value: Relation(GroupTheory(IsSubgroupOf { entity: GroupRelationEntity { id: None, description: None, tags: [] }, subgroup: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"H\" })), group: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [Finite(Finite(0))] }, name: \"G\" })) })) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_93b3b5e9-3eea-4147-9604-15dfd5f34f41:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_37553419-f0c0-4793-ba91-1e510de71c1c\", 0), value: Expression(Group(Coset { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"g\" }, subgroup: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, is_left: true })) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_93b3b5e9-3eea-4147-9604-15dfd5f34f41:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_a06f7a60-37ca-4cc2-9dc2-105916a68ca9\", 0), value: Var(E(76)) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_93b3b5e9-3eea-4147-9604-15dfd5f34f41:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_25770251-4620-4ced-bd3f-733597a6586c\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Var(Name(\"size_of_coset\", 1388)), Var(O(105))], metadata: {}, description: None }, left: Var(Name(\"size_of_coset\", 1388)), right: Var(O(105)) }) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "lagrange_theorem:step_a06f7a60-37ca-4cc2-9dc2-105916a68ca9",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "lagrange_theorem:step_a06f7a60-37ca-4cc2-9dc2-105916a68ca9",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "lagrange_theorem:step_a06f7a60-37ca-4cc2-9dc2-105916a68ca9:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_be16379e-673c-4e06-8a85-41bc13c7daa7\", 0), value: Relation(GroupTheory(IsSubgroupOf { entity: GroupRelationEntity { id: None, description: None, tags: [] }, subgroup: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"H\" })), group: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [Finite(Finite(0))] }, name: \"G\" })) })) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_a06f7a60-37ca-4cc2-9dc2-105916a68ca9:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_37553419-f0c0-4793-ba91-1e510de71c1c\", 0), value: Expression(Group(Coset { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"g\" }, subgroup: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, is_left: true })) }"
                    }
                  }
                ]
              }
            }
          },
          {
            "id": "lagrange_theorem:step_a2a339be-e21f-4ff2-abb1-8a9e6af14ae8",
            "content": {
              "ProofGoal": {
                "statement": {
                  "id": "lagrange_theorem:step_a2a339be-e21f-4ff2-abb1-8a9e6af14ae8",
                  "content": {
                    "Text": "→"
                  }
                },
                "quantifiers": [],
                "variables": [
                  {
                    "id": "lagrange_theorem:step_a2a339be-e21f-4ff2-abb1-8a9e6af14ae8:variable_0",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_be16379e-673c-4e06-8a85-41bc13c7daa7\", 0), value: Relation(GroupTheory(IsSubgroupOf { entity: GroupRelationEntity { id: None, description: None, tags: [] }, subgroup: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"H\" })), group: Expression(Group(Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [Finite(Finite(0))] }, name: \"G\" })) })) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_a2a339be-e21f-4ff2-abb1-8a9e6af14ae8:variable_1",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_37553419-f0c0-4793-ba91-1e510de71c1c\", 0), value: Expression(Group(Coset { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, element: Variable { group: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, name: \"g\" }, subgroup: Group { base_set: Parametric set: Abstract group set (params: ), operation: GroupOperation { operation_type: Multiplication, notation: Infix(Times), identity: One, inverse: MultiplicativeInverse, inverse_application: TwoSided, properties: [Associative] }, properties: [] }, is_left: true })) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_a2a339be-e21f-4ff2-abb1-8a9e6af14ae8:variable_2",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_a06f7a60-37ca-4cc2-9dc2-105916a68ca9\", 0), value: Var(E(76)) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_a2a339be-e21f-4ff2-abb1-8a9e6af14ae8:variable_3",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_25770251-4620-4ced-bd3f-733597a6586c\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Var(Name(\"size_of_coset\", 1388)), Var(O(105))], metadata: {}, description: None }, left: Var(Name(\"size_of_coset\", 1388)), right: Var(O(105)) }) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_a2a339be-e21f-4ff2-abb1-8a9e6af14ae8:variable_4",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_93b3b5e9-3eea-4147-9604-15dfd5f34f41\", 0), value: Relation(Equal { meta: RelationDetail { expressions: [Var(O(105)), Var(Name(\"index_times_order_H\", 1979))], metadata: {}, description: None }, left: Var(O(105)), right: Var(Name(\"index_times_order_H\", 1979)) }) }"
                    }
                  },
                  {
                    "id": "lagrange_theorem:step_a2a339be-e21f-4ff2-abb1-8a9e6af14ae8:variable_5",
                    "content": {
                      "Text": "ValueBindedVariable { name: Name(\"var_72e9bd4b-647c-4bdb-9f93-1c3f379fea23\", 0), value: Relation(GroupTheory(OrderDivides { entity: GroupRelationEntity { id: None, description: Some(\"Order of subgroup divides order of group\"), tags: [] }, group1: Var(O(105)), group2: Var(O(105)) })) }"
                    }
                  }
                ]
              }
            }
          }
        ],
        "theory": "groups"
      }
    }
  }
]