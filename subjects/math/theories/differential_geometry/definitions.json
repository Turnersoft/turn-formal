[
  {
    "name": "SmoothManifold",
    "docs": "A smooth manifold is a topological space locally homeomorphic to Euclidean space\nwith smooth transition maps between overlapping charts.\n\nKey concepts:\n- Charts: Local homeomorphisms to ℝⁿ\n- Transition maps: Changes between overlapping charts\n- Atlas: Collection of compatible charts covering manifold\n- Tangent spaces: Local linearization at each point",
    "kind": "struct",
    "members": [
      {
        "name": "base_set",
        "type": "Set",
        "docs": "The underlying set of points"
      },
      {
        "name": "dimension",
        "type": "u32",
        "docs": "Dimension of the manifold"
      },
      {
        "name": "properties",
        "type": "Vec<SmoothManifoldProperty>",
        "docs": "Properties specific to the smooth structure"
      }
    ]
  },
  {
    "name": "RiemannianManifold",
    "docs": "A Riemannian manifold is a smooth manifold equipped with a metric tensor\nthat varies smoothly from point to point.\n\nKey concepts:\n- Metric tensor: Inner product on each tangent space\n- Geodesics: Length-minimizing curves\n- Curvature: Measure of deviation from flatness\n- Levi-Civita connection: Canonical way to differentiate",
    "kind": "struct",
    "members": [
      {
        "name": "smooth_manifold",
        "type": "SmoothManifold",
        "docs": "The underlying smooth manifold"
      },
      {
        "name": "properties",
        "type": "Vec<RiemannianManifoldProperty>",
        "docs": "Properties specific to the Riemannian structure"
      }
    ]
  },
  {
    "name": "SmoothManifoldProperty",
    "docs": "Properties specific to smooth manifolds",
    "kind": "enum",
    "members": [
      {
        "name": "Orientable",
        "docs": "Orientability properties",
        "type_info": "OrientabilityType"
      },
      {
        "name": "Boundary",
        "docs": "Boundary properties",
        "type_info": "BoundaryType"
      },
      {
        "name": "Parallelizable",
        "docs": "Parallelizability properties",
        "type_info": "ParallelizabilityType"
      },
      {
        "name": "ComplexStructure",
        "docs": "Complex structure properties",
        "type_info": "ComplexStructureType"
      }
    ]
  },
  {
    "name": "RiemannianManifoldProperty",
    "docs": "Properties specific to Riemannian manifolds",
    "kind": "enum",
    "members": [
      {
        "name": "Curvature",
        "docs": "Curvature properties",
        "type_info": "CurvatureType"
      },
      {
        "name": "Complete",
        "docs": "Completeness properties",
        "type_info": "CompletenessType"
      },
      {
        "name": "Einstein",
        "docs": "Einstein properties",
        "type_info": "EinsteinType"
      },
      {
        "name": "Kahler",
        "docs": "Kähler properties",
        "type_info": "KahlerType"
      }
    ]
  },
  {
    "name": "OrientabilityType",
    "docs": "Types of orientability for manifolds",
    "kind": "enum",
    "members": [
      {
        "name": "Orientable",
        "docs": "Admits consistent orientation",
        "type_info": null
      },
      {
        "name": "NonOrientable",
        "docs": "Does not admit consistent orientation",
        "type_info": null
      },
      {
        "name": "PinStructure",
        "docs": "Orientation reverses along some paths",
        "type_info": null
      }
    ]
  },
  {
    "name": "BoundaryType",
    "docs": "Types of boundary conditions for manifolds",
    "kind": "enum",
    "members": [
      {
        "name": "Closed",
        "docs": "No boundary",
        "type_info": null
      },
      {
        "name": "WithBoundary",
        "docs": "Has boundary components",
        "type_info": null
      },
      {
        "name": "WithCorners",
        "docs": "Boundary is a corner",
        "type_info": null
      }
    ]
  },
  {
    "name": "ParallelizabilityType",
    "docs": "Types of parallelizability for manifolds",
    "kind": "enum",
    "members": [
      {
        "name": "Parallelizable",
        "docs": "Admits global frame field",
        "type_info": null
      },
      {
        "name": "NonParallelizable",
        "docs": "Does not admit global frame field",
        "type_info": null
      },
      {
        "name": "Spin",
        "docs": "Admits spin structure",
        "type_info": null
      }
    ]
  },
  {
    "name": "ComplexStructureType",
    "docs": "Types of complex structures on manifolds",
    "kind": "enum",
    "members": [
      {
        "name": "Complex",
        "docs": "Admits integrable complex structure",
        "type_info": null
      },
      {
        "name": "AlmostComplex",
        "docs": "Admits almost complex structure",
        "type_info": null
      },
      {
        "name": "NonComplex",
        "docs": "Does not admit complex structure",
        "type_info": null
      }
    ]
  },
  {
    "name": "CurvatureType",
    "docs": "Types of curvature for Riemannian manifolds",
    "kind": "enum",
    "members": [
      {
        "name": "ConstantSectional",
        "docs": "Constant sectional curvature",
        "type_info": "f64"
      },
      {
        "name": "PositiveRicci",
        "docs": "Positive Ricci curvature",
        "type_info": null
      },
      {
        "name": "NegativeRicci",
        "docs": "Negative Ricci curvature",
        "type_info": null
      },
      {
        "name": "RicciFlat",
        "docs": "Zero Ricci curvature",
        "type_info": null
      }
    ]
  },
  {
    "name": "CompletenessType",
    "docs": "Types of completeness for Riemannian manifolds",
    "kind": "enum",
    "members": [
      {
        "name": "Complete",
        "docs": "Geodesically complete",
        "type_info": null
      },
      {
        "name": "Incomplete",
        "docs": "Not geodesically complete",
        "type_info": null
      },
      {
        "name": "CompleteWithBoundary",
        "docs": "Complete with boundary",
        "type_info": null
      }
    ]
  },
  {
    "name": "EinsteinType",
    "docs": "Types of Einstein metrics",
    "kind": "enum",
    "members": [
      {
        "name": "Einstein",
        "docs": "Ricci tensor proportional to metric",
        "type_info": null
      },
      {
        "name": "NonEinstein",
        "docs": "Not Einstein",
        "type_info": null
      },
      {
        "name": "EinsteinLambda",
        "docs": "Einstein with cosmological constant",
        "type_info": "f64"
      }
    ]
  },
  {
    "name": "KahlerType",
    "docs": "Types of Kähler structures",
    "kind": "enum",
    "members": [
      {
        "name": "Kahler",
        "docs": "Kähler metric",
        "type_info": null
      },
      {
        "name": "AlmostKahler",
        "docs": "Almost Kähler metric",
        "type_info": null
      },
      {
        "name": "NonKahler",
        "docs": "Not Kähler",
        "type_info": null
      }
    ]
  },
  {
    "name": "VectorBundle",
    "docs": "A vector bundle E → M consists of:\n- Base manifold M\n- Total space E\n- Projection π: E → M\n- Fiber F (vector space) at each point",
    "kind": "struct",
    "members": [
      {
        "name": "base_manifold",
        "type": "SmoothManifold",
        "docs": "The base manifold"
      },
      {
        "name": "fiber_dimension",
        "type": "u32",
        "docs": "The fiber dimension"
      },
      {
        "name": "properties",
        "type": "VariantSet<VectorBundleProperty>",
        "docs": "Properties of the bundle"
      }
    ]
  },
  {
    "name": "VectorBundleProperty",
    "docs": "Properties specific to vector bundles",
    "kind": "enum",
    "members": [
      {
        "name": "Trivial",
        "docs": "Trivial: Isomorphic to product bundle",
        "type_info": "TrivialityPropertyVariant"
      },
      {
        "name": "Orientable",
        "docs": "Orientable: Admits consistent orientation",
        "type_info": "OrientabilityPropertyVariant"
      },
      {
        "name": "Stable",
        "docs": "Stable: Stable under direct sum",
        "type_info": "StabilityPropertyVariant"
      }
    ]
  },
  {
    "name": "TrivialityPropertyVariant",
    "docs": "Properties for triviality of vector bundles",
    "kind": "enum",
    "members": [
      {
        "name": "Trivial",
        "docs": "Globally trivial",
        "type_info": null
      },
      {
        "name": "LocallyTrivial",
        "docs": "Locally trivial",
        "type_info": null
      },
      {
        "name": "NonTrivial",
        "docs": "Non-trivial",
        "type_info": null
      }
    ]
  },
  {
    "name": "OrientabilityPropertyVariant",
    "docs": "Properties for orientability of vector bundles",
    "kind": "enum",
    "members": [
      {
        "name": "Orientable",
        "docs": "Orientable bundle",
        "type_info": null
      },
      {
        "name": "NonOrientable",
        "docs": "Non-orientable bundle",
        "type_info": null
      }
    ]
  },
  {
    "name": "StabilityPropertyVariant",
    "docs": "Properties for stability of vector bundles",
    "kind": "enum",
    "members": [
      {
        "name": "Stable",
        "docs": "Stable under direct sum",
        "type_info": null
      },
      {
        "name": "NonStable",
        "docs": "Not stable",
        "type_info": null
      }
    ]
  },
  {
    "name": "Connection",
    "docs": "A connection ∇ on a vector bundle gives a notion of:\n- Parallel transport\n- Covariant differentiation\n- Horizontal subspaces",
    "kind": "struct",
    "members": [
      {
        "name": "bundle",
        "type": "VectorBundle",
        "docs": "The underlying vector bundle"
      },
      {
        "name": "properties",
        "type": "VariantSet<ConnectionProperty>",
        "docs": "Properties of the connection"
      }
    ]
  },
  {
    "name": "ConnectionProperty",
    "docs": "Properties specific to connections",
    "kind": "enum",
    "members": [
      {
        "name": "Flat",
        "docs": "Flat: Zero curvature",
        "type_info": "FlatnessPropertyVariant"
      },
      {
        "name": "MetricCompatible",
        "docs": "Compatible with metric",
        "type_info": "MetricCompatibilityPropertyVariant"
      },
      {
        "name": "TorsionFree",
        "docs": "Torsion free: T(X,Y) = 0",
        "type_info": "TorsionFreePropertyVariant"
      }
    ]
  },
  {
    "name": "FlatnessPropertyVariant",
    "docs": "Properties for flatness of connections",
    "kind": "enum",
    "members": [
      {
        "name": "Flat",
        "docs": "Zero curvature",
        "type_info": null
      },
      {
        "name": "NonFlat",
        "docs": "Non-zero curvature",
        "type_info": null
      }
    ]
  },
  {
    "name": "MetricCompatibilityPropertyVariant",
    "docs": "Properties for metric compatibility of connections",
    "kind": "enum",
    "members": [
      {
        "name": "Compatible",
        "docs": "Compatible with metric",
        "type_info": null
      },
      {
        "name": "NonCompatible",
        "docs": "Not compatible",
        "type_info": null
      }
    ]
  },
  {
    "name": "TorsionFreePropertyVariant",
    "docs": "Properties for torsion-freeness of connections",
    "kind": "enum",
    "members": [
      {
        "name": "TorsionFree",
        "docs": "Zero torsion",
        "type_info": null
      },
      {
        "name": "HasTorsion",
        "docs": "Non-zero torsion",
        "type_info": null
      }
    ]
  },
  {
    "name": "FiberBundle",
    "docs": "A fiber bundle is a structure (E, B, π, F) where:\n- E is the total space\n- B is the base space\n- π: E → B is a continuous surjection (the projection)\n- F is the fiber (typical fiber)\n- For each point x in B, the preimage π⁻¹(x) is homeomorphic to F\n- The bundle is locally trivial: each point in B has a neighborhood U such that\nπ⁻¹(U) is homeomorphic to U × F",
    "kind": "struct",
    "members": [
      {
        "name": "total_space",
        "type": "Set",
        "docs": "The total space E"
      },
      {
        "name": "base_space",
        "type": "Set",
        "docs": "The base space B"
      },
      {
        "name": "fiber",
        "type": "Set",
        "docs": "The fiber F"
      },
      {
        "name": "properties",
        "type": "VariantSet<FiberBundleProperty>",
        "docs": "Properties of the fiber bundle"
      }
    ]
  },
  {
    "name": "FiberBundleProperty",
    "docs": "Properties specific to fiber bundles",
    "kind": "enum",
    "members": [
      {
        "name": "Trivial",
        "docs": "Whether the bundle is trivial (globally homeomorphic to B × F)",
        "type_info": "bool"
      },
      {
        "name": "LocallyTrivial",
        "docs": "Whether the bundle is locally trivial",
        "type_info": "bool"
      },
      {
        "name": "Principal",
        "docs": "Whether the bundle is a principal bundle (fiber is a Lie group acting freely)",
        "type_info": "bool"
      },
      {
        "name": "VectorBundle",
        "docs": "Whether the bundle is a vector bundle (fiber is a vector space)",
        "type_info": "bool"
      },
      {
        "name": "AdmitsGlobalSection",
        "docs": "Whether the bundle admits a global section",
        "type_info": "bool"
      },
      {
        "name": "Orientable",
        "docs": "Whether the bundle is orientable",
        "type_info": "bool"
      }
    ]
  },
  {
    "name": "BundleSection",
    "docs": "A section of a fiber bundle is a continuous map s: B → E such that π ∘ s = id_B",
    "kind": "struct",
    "members": [
      {
        "name": "name",
        "type": "String",
        "docs": "Name or description of the section"
      },
      {
        "name": "section_type",
        "type": "SectionType",
        "docs": "Whether the section is global or local"
      }
    ]
  },
  {
    "name": "SectionType",
    "docs": "Types of bundle sections",
    "kind": "enum",
    "members": [
      {
        "name": "Global",
        "docs": "Global section (defined on all of B)",
        "type_info": null
      },
      {
        "name": "Local",
        "docs": "Local section (defined on an open subset of B)",
        "type_info": null
      },
      {
        "name": "Meromorphic",
        "docs": "Meromorphic section (defined except at poles)",
        "type_info": null
      }
    ]
  }
]